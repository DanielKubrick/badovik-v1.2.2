'use client'

import { useEffect, useState } from 'react'
import { useRouter } from 'next/navigation'
import { CheckCircle, CreditCard, ArrowLeft, Receipt, Package } from 'lucide-react'
import { getOrderFromStorage, clearOrderFromStorage, formatPrice, type OrderData } from '@/lib/order-utils'
import { useToastSuccess, useToastError } from '@/components/ui/ToastContainer'
import LoadingSpinner from '@/components/ui/LoadingSpinner'

export default function OrderSuccessContent() {
  const router = useRouter()
  const toastSuccess = useToastSuccess()
  const toastError = useToastError()
  
  const [orderData, setOrderData] = useState<OrderData | null>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –∏–∑ localStorage
    const storedOrder = getOrderFromStorage()
    if (storedOrder) {
      setOrderData(storedOrder)
    }
    setLoading(false)
  }, [])

  const copyToClipboard = async (text: string) => {
    try {
      await navigator.clipboard.writeText(text)
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à–∏ toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      toastSuccess(
        '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!', 
        '–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'
      )
    } catch (err) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å:', err)
      
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      try {
        const textArea = document.createElement('textarea')
        textArea.value = text
        document.body.appendChild(textArea)
        textArea.select()
        document.execCommand('copy')
        document.body.removeChild(textArea)
        
        toastSuccess('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!', '–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞')
      } catch (fallbackError) {
        toastError(
          '–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è', 
          '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: ' + text
        )
      }
    }
  }

  const handleSendReceipt = () => {
    if (!orderData) {
      toastError('–û—à–∏–±–∫–∞', '–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      return
    }

    try {
      const paymentUrl = `https://badovik.dedyn.io/checkout/order-pay/${orderData.id}/?pay_for_order=true&key=${orderData.key}`
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp API
      if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
        window.Telegram.WebApp.openLink(paymentUrl)
        toastSuccess('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ', '–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã...')
      } else {
        window.open(paymentUrl, '_blank')
        toastSuccess('–°—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞', '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–ø–ª–∞—Ç—ã –æ—Ç–∫—Ä—ã—Ç–∞ –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ')
      }
    } catch (error) {
      toastError('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã')
    }
  }

  const handleBackToHome = () => {
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    clearOrderFromStorage()
    toastSuccess('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è', '–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Ç–æ–≤–∞—Ä–æ–≤')
    router.push('/')
  }

  if (loading) {
    return (
      <div className="telegram-app">
        <div className="telegram-content">
          <div className="text-center py-20">
            <LoadingSpinner size="large" />
            <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞...</p>
          </div>
        </div>
      </div>
    )
  }

  if (!orderData) {
    return (
      <div className="telegram-app">
        <div className="telegram-header">
          <button 
            onClick={handleBackToHome}
            className="telegram-back-btn"
          >
            <ArrowLeft size={20} />
          </button>
          <h1 className="telegram-header-title">–û—à–∏–±–∫–∞</h1>
        </div>
        <div className="telegram-content">
          <div className="text-center py-20">
            <div className="text-6xl mb-4">üòî</div>
            <p className="text-gray-600 mb-6">–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
            <p className="text-sm text-gray-500 mb-6">
              –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ —É—Å—Ç–∞—Ä–µ–ª–∏ –∏–ª–∏ –±—ã–ª–∏ –æ—á–∏—â–µ–Ω—ã
            </p>
            <button 
              onClick={handleBackToHome}
              className="telegram-primary-btn"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º
            </button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="telegram-app">
      {/* Header */}
      <div className="telegram-header">
        <button 
          onClick={handleBackToHome}
          className="telegram-back-btn"
        >
          <ArrowLeft size={20} />
        </button>
        <h1 className="telegram-header-title">–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</h1>
        <div className="telegram-header-count">
          ‚Ññ{orderData.orderNumber}
        </div>
      </div>

      {/* Content */}
      <div className="telegram-content">
        {/* Success Card */}
        <div className="telegram-card telegram-success-card">
          <div className="telegram-success-icon">
            <CheckCircle size={32} />
          </div>
          <div className="telegram-success-content">
            <h2 className="telegram-success-title">
              –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!
            </h2>
            <p className="telegram-success-subtitle">
              –ó–∞–∫–∞–∑ ‚Ññ{orderData.orderNumber} ‚Ä¢ –°—É–º–º–∞: <span className="telegram-price">{formatPrice(orderData.total, orderData.currency)}</span>
            </p>
          </div>
        </div>

        {/* Payment Instructions */}
        <div className="telegram-card telegram-payment-card">
          <div className="telegram-card-header">
            <CreditCard className="telegram-card-header-icon" />
            <h3 className="telegram-card-header-title">
              –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã
            </h3>
          </div>
          
          <div className="telegram-payment-details">
            {/* Card Number */}
            <div className="telegram-payment-item">
              <div className="telegram-payment-item-content">
                <div className="telegram-payment-item-label">
                  –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:
                </div>
                <div className="telegram-payment-item-value">
                  4361 5390 0584 4909
                </div>
              </div>
              <button 
                onClick={() => copyToClipboard('4361539005844909')}
                className="telegram-copy-btn"
              >
                –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
              </button>
            </div>
            
            {/* Recipient */}
            <div className="telegram-payment-item">
              <div className="telegram-payment-item-content">
                <div className="telegram-payment-item-label">
                  –ü–æ–ª—É—á–∞—Ç–µ–ª—å:
                </div>
                <div className="telegram-payment-item-value">
                  –ü–∞–ª—å—á–∏–∫–æ–≤ –ú.–ú (–ë–∞–Ω–∫ –ö–æ–º–ø–∞–Ω—å–æ–Ω)
                </div>
              </div>
            </div>
            
            {/* Purpose */}
            <div className="telegram-payment-item">
              <div className="telegram-payment-item-content">
                <div className="telegram-payment-item-label">
                  –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞:
                </div>
                <div className="telegram-payment-item-value">
                  –û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ ‚Ññ{orderData.orderNumber}
                </div>
              </div>
            </div>
            
            {/* Amount */}
            <div className="telegram-payment-item">
              <div className="telegram-payment-item-content">
                <div className="telegram-payment-item-label">
                  –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:
                </div>
                <div className="telegram-payment-item-value">
                  {formatPrice(orderData.total, orderData.currency)}
                </div>
              </div>
              <button 
                onClick={() => copyToClipboard(orderData.total)}
                className="telegram-copy-btn"
              >
                –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
              </button>
            </div>
          </div>
        </div>

        {/* Send Receipt Button */}
        <button 
          onClick={handleSendReceipt}
          className="telegram-primary-btn telegram-send-receipt-btn"
        >
          <Receipt size={20} />
          <span>–ü—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫</span>
        </button>

        {/* Information Card */}
        <div className="telegram-card telegram-info-card">
          <div className="telegram-info-content">
            –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —á–µ–∫ –≤ –¥–∏–∞–ª–æ–≥ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—ã—à–µ. 
            –í–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç. 
            –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã, –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –¥–∏–∞–ª–æ–≥–µ.
          </div>
        </div>

        {/* Spacer between info and order composition */}
        <div className="telegram-section-spacer"></div>

        {/* Order Details - Improved Design */}
        {orderData.items && orderData.items.length > 0 && (
          <div className="telegram-card telegram-order-composition-card">
            <div className="telegram-card-header">
              <Package className="telegram-card-header-icon" />
              <h3 className="telegram-card-header-title">–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞</h3>
            </div>
            <div className="telegram-order-items-improved">
              {orderData.items.map((item, index) => (
                <div key={index} className="telegram-order-item-improved">
                  <div className="telegram-order-item-main">
                    <h4 className="telegram-order-item-name">{item.name}</h4>
                    <div className="telegram-order-item-calculation">
                      <span className="telegram-order-quantity">{item.quantity} —à—Ç.</span>
                      <span className="telegram-order-multiply">√ó</span>
                      <span className="telegram-order-unit-price">{formatPrice(item.price)}</span>
                    </div>
                  </div>
                  <div className="telegram-order-item-subtotal">
                    {formatPrice(item.price * item.quantity)}
                  </div>
                </div>
              ))}
              
              {/* Order Total */}
              <div className="telegram-order-total-improved">
                <span className="telegram-order-total-label">–ò—Ç–æ–≥–æ:</span>
                <span className="telegram-order-total-amount">
                  {formatPrice(orderData.total, orderData.currency)}
                </span>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}
